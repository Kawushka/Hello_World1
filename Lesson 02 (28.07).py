# import random
# me_count = 0
# pc_count = 0
# while me_count < 3 and pc_count < 3:
#     i = input('Выберите камень, ножницы или бумагу: ')
#     j = random.choice(['камень','ножницы','бумага'])
#     print(j)
#     if i==j: print('Ничья')
#     elif i.lower() == 'камень':
#         if j == 'ножницы':
#             print('Вы победили')
#             me_count += 1
#         else:
#             print('Вы проиграли')
#             pc_count += 1
#     elif i.lower() == 'ножницы':
#         if j == 'бумага':
#             print('Вы победили')
#             me_count += 1
#         else:
#             print('Вы проиграли')
#             pc_count += 1
#     elif i.lower() == 'бумага':
#         if j == 'камень':
#             print('Вы победили')
#             me_count += 1
#         else:
#             print('Вы проиграли')
#             pc_count += 1
# if pc_count>me_count: print('Вы проиграли!')
# else: print('Вы выиграли!')



#Списки.
#Списки - это один из типов коллекций
#Упорядочены, изменяемы, состоят из элементов любого типа данных
# list1 = [1,2,3,4,5] #создали переменную list1, которая является списком, состоящим только из элементов типа int
# list2 = ['one', 'jffidf', 1,2,3,4] #списко list2 состоит из элементов разных типов
# list3 = [] #создали пустой список
# list4 = list() #создали пустой список
# list5 = list('jfdkdfhdfkjdf') #str превратили в тип list
# print(list('12344')) #разбили число на цифры, представив число как строку
# int тип нельзя превратить в список
# a = [1,2,3,4,5]
# print(a[0]) #первый элемент имеет индекс 0
# print(a[1])
# print(a[-1]) #выводит последний элемент
# print(a[-2]) #предпоследний символ
# a.append(6) #добавляет элемент в конец списка
# print(a)
# a.append('n') #работает в том числе со строками
# print(a)
# a.insert(1,'A') #insert вставляет элемент в указанную позицию и сдвигает элемент на этой позиции
# print(a)
# a[0] = 100 #изменили элемент на позиции 0
# print(a)
# del a[0] #команда del удаляет элемент списка по заданной позиции
# print(a)
# a = [2,2,2,2,2,3,2,2,2,2]
# # print(a.count(2)) #count - метод, который покажет, сколько раз 2 встречается в списке a
# while a.count(2) != 0:
#     a.remove(2)
# print(a)
# a = [1,2,3,4,[5,6,7,8]] #[5,6,7,8] - вложенный список.
# del a[4][2] #при удалении элементов из вложенных списков, сначала указываем, где находится вложенный список
# а затем, на каком месте в этом вложенном списке находится искомый элемент
# a = [1,2,3,4,[5,6,7,8,[55,[6]]]]
# # del a[4][4][1][0] #чем больше глубина, тем больше индексов
# # a[4][4][0] = 44 #элемент 55 заменили на 44
# a[4][4][1].insert(0,9) #вставка во вложенный список - перед 6 вставили 9
# print(a)
# my_list = [1,5,'h','jghghg',100000]
# print(my_list[0:2]) #вывели на печать срез списка my_list с 0 до 2 элемента не включительно
# print(my_list[0:5:2]) #вывели срез с 0 по 5 элемент с шагом 2
# print(my_list[::]) #первый, второй и третий аргумент можно не указывать.
# Тогда по умолчанию будет с первого по последний с шагом 1
# my_word = 'jljlkfjljf'
# print(my_word[-1:0:-1]) #печать в обратную сторону
# print(my_word[::-1]) #печать в обратную сторону
# print(my_list[::-1]) #аналогично работает со списками
# del my_list[2:] #удалили все элементы после второго включительно
# del my_list[:2] #удалил элементы от начала до 2 не включительно
# del my_list[1:4] #удалили с 1 включительно до 4 не включительно
# print(my_list)

# my_list = [1,5,'h','jghghg',100000]
# # if 100000 in my_list: print('Yes') #оператор in выдает True если элемент есть в списке, иначе False
# # print(100000 in my_list) #выводим наглядно на печать
# # print('h' in my_list)
# print(2 in my_list and 5 in my_list) #проверяет есть ли оба элемента в списке

# list_1 = ['a','b','c']
# list_2 = [1,2,3]
# # list_3 = list_1+list_2
# # print(list_3) #сложили два списка в один
# list_1.extend(list_2) #list_1 расширили за счет list_2. list_2 не изменился
# print(list_1)

# my_list = [1,5,'h','jghghg',100000]
# my_list_1 = my_list
# my_list.append(5)
# my_list_1.append(10)
# print(my_list,my_list_1) #печатаются разные переменные, но одна и та же ячейка памяти
# my_list_1 = my_list.copy() #копируем список и заводим для него новую ячейку памяти
# my_list.append(1)
# my_list_1.append(33)
# print(my_list,my_list_1)
# my_list_1 = my_list[2:].copy() #скопировали часть списка
# for i in my_list: #цикл обхода списка
#     print(i, end=' ')
# i = 0
# while i<len(my_list): #работает аналогично, но занимает больше места
#     print(my_list[i], end=' ')
#     i += 1
# my_list.clear() #очищает список
# my_list = [1,5,'h','h','jghghg',100000,[6,5,[4,3]]]
# my_list_1 = my_list.copy()
# print(id(my_list), id(my_list_1)) #нагляно показали, что списки находятся в разных ячейках памяти
# print(my_list.index('h')) #показывает номер указанного элемента

#list.pop(i) - удаляет элемент на позиции i в списке list. Его можно выводить на печать
# my_list.pop(1) #удалили элемент на 1 позиции
# print(my_list)
# print(my_list.pop(1)) #распечатали удаленный элемент
# print(my_list.pop()) # удаляет последний элемент, если не указать аргумент
# my_list.reverse() # делает список в обратную сторону. Этот метод нельзя распечатать
# print(my_list)

# new_list = [5,7,3,0,10,20,1]
# new_list.sort() #сортирует список, но не выводит ничего для печать (нельзя распечатать)
# print(new_list)
# new_list.sort(reverse=True) #сортирует список, но не выводит ничего для печать (нельзя распечатать)
# print(new_list)
# word_list = ['r','t','yt','f','ttt']
# word_list.sort() #сортировка по алфавиту
# word_list.sort(key=len,reverse=True) #отсортировали по длине слов, в обратном порядке
# print(word_list)

my_number = [6,2,3,4,5,8,1]
chet = 0
nechet = 0
for i in my_number:
    if i%2 == 0:
        chet += 1
    else:
        nechet += 1
print(chet,nechet)

proiz = 1
summa = 0
if nechet > chet:
    for j in my_number:
        proiz *= j
    print('Произведение: ', proiz)

else:
    # for j in my_number:
    #     summa += j
    # print('Сумма: ', summa)
    print('Сумма: ', sum(my_number))
import math
print('Произведение: ',math.prod(my_number))